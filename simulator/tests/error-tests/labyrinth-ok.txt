#include <Servo.h>

int NO_LINEA = LOW; // También podría ponerse 0
int LINEA = HIGH; // También podría ponerse 1

Servo servoIzq;
Servo servoDer;

//Movimiento
int pinIrDer = 3;
int pinIrIzq = 2;

//Escoger camino (extremos)
int pinExDer = 11;
int pinExIzq = 10;

int pinServoDer = 9;
int pinServoIzq = 8;

void setup() {
 pinMode(pinIrDer, INPUT);
 pinMode(pinIrIzq, INPUT);

 pinMode(pinExDer, INPUT);
 pinMode(pinExIzq, INPUT);

 servoIzq.attach(pinServoIzq);
 servoDer.attach(pinServoDer);

}

void loop() {
 if(digitalRead(pinIrIzq) == LINEA && digitalRead(pinIrDer) == LINEA){
  avanzar(90);
  laberinto();
 } else if(digitalRead(pinIrIzq) == NO_LINEA && digitalRead(pinIrDer) == NO_LINEA){
  derecha(90);
 } else if(digitalRead(pinIrDer) == NO_LINEA){
  izquierda(30);
 } else {
  derecha(30);
 }
}

void laberinto(){
  if(digitalRead(pinExDer) == LINEA && digitalRead(pinExIzq) == LINEA){   //Si ve camino a ambos lados
    avanzar(90);
    long tiempoInicial = millis();
    while(true){
      if(millis() - tiempoInicial > 500){
        detenerDelTodo();
      } if(digitalRead(pinExDer) == NO_LINEA && digitalRead(pinExIzq) == NO_LINEA){
        girarDerechaLab();
        break;
      } 
    }
  } else if(digitalRead(pinExDer) == LINEA){  //Si ve camino a la derecha
    avanzar(90);
    while(true){
      if(digitalRead(pinExDer) == NO_LINEA){
        girarDerechaLab();
        break;
      }
    }
  } else if(digitalRead(pinExIzq) == LINEA){  //Si ve camino a la izquierda
    avanzar(90);
    while(true){
      if(digitalRead(pinIrIzq) == NO_LINEA && digitalRead(pinIrDer) == NO_LINEA){
        detener();
        girarIzquierdaLab();
        break;
      }
      if(digitalRead(pinExIzq) == NO_LINEA){
        detener();
        break;
      }
    }
  }
}

void detenerDelTodo(){
  while(true){
    detener();
  }
}

void girarDerechaLab(){
  derecha(90);
  delay(100);
  while(true){
    if(digitalRead(pinIrIzq) == LINEA && digitalRead(pinIrDer) == LINEA){
      detener();
      break;
    }
  }
}

void girarIzquierdaLab(){
  izquierda(90);
  delay(100);
  while(true){
    if(digitalRead(pinIrIzq) == LINEA && digitalRead(pinIrDer) == LINEA){
      detener();
      break;
    }
  }
}

void detener(){
 servoIzq.write(90);
 servoDer.write(90);
}

void avanzar(int v){
  int velocidadI = 90 - v;
  servoIzq.write(velocidadI);
  int velocidadD = 90 + v;
  servoDer.write(velocidadD);
}

void retroceder(int v){
  int velocidadI = 90 + v;
  servoIzq.write(velocidadI);
  int velocidadD = 90 - v;
  servoDer.write(velocidadD);
}

void izquierda(int v){
  int velocidad = 90 + v;
  servoDer.write(velocidad);
  servoIzq.write(velocidad);
}

void derecha(int v){
  int velocidad = 90 - v;
  servoDer.write(velocidad);
  servoIzq.write(velocidad);
}

void espiral(){
  boolean perdido = true;
  int tiempoEspiral = 500;
  while(perdido){
    avanzar(90);
    double inicioCuentaTiempo = millis();
    while(millis() - inicioCuentaTiempo <= tiempoEspiral){
      if(digitalRead(pinIrIzq) == LINEA || digitalRead(pinIrDer) == LINEA){
        perdido = false;
        detener();
        break;
      }
    }
    if(perdido){
      tiempoEspiral += 500;
      derecha(30);
      delay(850);
    }
  }
}

void corregir(){
  boolean corregido = false;
  while(! corregido){
    izquierda(30);
    if(!(digitalRead(pinIrIzq) == LINEA && digitalRead(pinIrDer) == LINEA)){
      corregido = true;
      detener();
    
    }
  }
}
