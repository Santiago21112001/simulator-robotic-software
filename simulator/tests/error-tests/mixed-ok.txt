#include <Keypad.h>
#include <TM1637.h>

//Teclado
const byte nfilas = 4;
const byte ncolumnas = 4;
char teclas[nfilas][ncolumnas] = {
{'1','2','3','A'},
{'4','5','6','B'},
{'7','8','9','C'},
{'*','0','#','D'}
};
byte pfilas[nfilas] = {2, 3, 4, 5};           // Filas
byte pcolumnas[ncolumnas] = {A0, A1, A2, A3}; //Columnas

Keypad teclado = Keypad(makeKeymap(teclas), pfilas,
pcolumnas, nfilas, ncolumnas);
String bufferLectura = "";

//LED
int ledRojo = 6;
int ledVerde = 7;
int led13 = 13;

//Ultrasonidos
int pinTrig = 8;
int pinEcho = 9;

//Segmento
int pinCLK = 13;
int pinDio = 12;
TM1637 screen(pinCLK, pinDio);

//Fotorresistor
byte pinFotorresistor = A5;

//Variables
//Contraseña
char realPass[] = {'9','8','7','6'};  //Contraseña real (si se introduce asi es correcto, sino no)
char pass[4];                         //Contrasena introducida por teclado
int count = 0;                        //Numero de teclas pulsadas
//Semaforo
double inicioCuentaTiempo;            //Tiempo para que se cierre el semaforo
//Pantalla de segmentos
int uds = 0;
int decs = 0;
int cent = 0;
int mill = 0;                         //Sirven para mostrar el numero de accesos
//Control de entrada
int primero = -1;                     //Variable que controla cual es el primer sensor que detecto algo
                                      //Si es -1 no ha detectado nada
                                      //Si es 0 detecto primero el ultrasonidos y si es 1 el de luz

void setup() {
  Serial.begin (9600);
//Leds  
  pinMode(ledRojo, OUTPUT);
  pinMode(ledVerde, OUTPUT);

//Ultrasonidos
  pinMode(pinTrig, OUTPUT);
  pinMode(pinEcho, INPUT);

//Fotorresistor
  pinMode(pinFotorresistor, INPUT);

//Pantalla
  screen.init();
  screen.set(7);
  delay(1500);
}

void loop() {
  char tecla = teclado.getKey();
  digitalWrite(ledVerde, HIGH);
  int luz = analogRead(pinFotorresistor);
  
  
  if (tecla != '\0' && count < 4){ //Si se pulsa algo se introduce la tecla pulsada
    pass[count] = tecla;
    count++;

    //---Impresiones para comprobar si lo que se introduce es correcto
    Serial.println("Se ha pulsado una tecla");
    for(int j=0;j<4;j++){
      Serial.println(pass[j]);
    }
    //---
  
  }

  if(luz <= 100){
    digitalWrite(ledVerde, LOW);  //Se cambia de verde a rojo
    delay(1000);
    digitalWrite(ledRojo, HIGH);  //Se enciende el led rojo
    boolean isSafe = false;
    while(! isSafe){
      //Luz
      luz = analogRead(pinFotorresistor); 

      //Ultrasonidos
      digitalWrite(pinTrig, HIGH);
      delayMicroseconds(10);
      int responseTime = pulseIn(pinEcho, HIGH); 
      int distancia = int(0.01716*responseTime);  //Se calcula la distancia
      Serial.println( distancia);

      if(distancia <= 10 && luz <= 100){
        isSafe = false;
      } else if(distancia <= 10){
        isSafe = false;
      } else if(luz <= 100){
        isSafe = false;
      } else {
        isSafe = true;
      }
      digitalWrite(pinTrig, LOW); 
    }
    digitalWrite(ledRojo, LOW);  //Se cambia de verde a rojo
    delay(1000);
    digitalWrite(ledVerde, HIGH);  //Se enciende el led rojo
  }
  
  if(count == 4 && luz > 100){ //Si el bloque es de 4
    if(!isValid()) {
      error();  //Se dispara en caso de que la contraseña sea incorrecta
    } else {
      digitalWrite(ledVerde, LOW);  //Se cambia de verde a rojo
      delay(1000);
      digitalWrite(ledRojo, HIGH);  //Se enciende el led rojo
      inicioCuentaTiempo = millis();  //5 segs hasta que se cierre (si no hay ninguna otra condicion)
    
      int distancia = 0;
      while ( millis() - inicioCuentaTiempo <= 5000 && luz > 100){
        //Fotorresistor
        luz = analogRead(pinFotorresistor);
        Serial.println(luz);  //La luz que se recibe
        
        //Ultrasonidos
        digitalWrite(pinTrig, HIGH);
        delayMicroseconds(10);
        int responseTime = pulseIn(pinEcho, HIGH); 
        int distancia = int(0.01716*responseTime);  //Se calcula la distancia
        
        //Lectura teclado
        tecla = teclado.getKey();
  
        //Logica del while
        if(distancia <= 10) {  //Si el sensor exterior detecta algo, no se cierra (idem si ambos detectan algo)
          inicioCuentaTiempo = millis();
          if(primero == -1){  //Si es el primer sensor en detectar algo...
            primero = 0;      //Se registra cual es el primer sensor en detectar algo
          }
        } 
        if (tecla != '\0' && tecla == 'C' && distancia > 10){  //Si no hay nada detectado y se pulsa 'C', se cierra
          break;
        }
        digitalWrite(pinTrig, LOW); 
      }
      digitalWrite(ledRojo, LOW);         //Se vuelve a apagar el led rojo y se enciende el verde
      if(primero == 0 || primero == -1){  //Si el primer sensor es el de ultrasonidos...
        incrementar();                    //Se sube el numero de accesos por la puerta
      }
      primero = -1;
      delay(500);
    }
    count = 0;  //Reiniciamos el contador de pulsaciones
  }   
}

boolean isValid(){
  boolean valid = true;
  int i;
  for(i=0;i<4;i++){
    if(pass[i] != realPass[i]){//La pass no coincide
      valid = false;
    }
  }
  return valid;
}

void error(){
  blink();
  delay(200);
  blink();
  delay(200);
  blink();
  delay(200);
}
 
 void blink(){
  digitalWrite(ledVerde, HIGH);
  delay(500);
  digitalWrite(ledVerde, LOW);
}

void incrementar(){
  uds = uds + 1;
  if(uds >= 9){
    if(decs >= 9){
      if(cent >= 9){
        cent = -1;
        mill = mill + 1;
      }
      decs = -1;
      cent = cent + 1;
    }
    uds = 0;
    decs = decs + 1;
  }
  screen.display(0,mill);
  screen.display(1,cent);
  screen.display(2,decs);
  screen.display(3,uds);
}